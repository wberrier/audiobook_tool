#!/usr/bin/env python

# This needs to be run in it's own temporary directory, otherwise it really clouds things up.

# cd audio input format
lame_input_bits="16"
lame_input_rate="44.1"
lame_output_rate="22.05"

# mp3 bitrate
lame_bitrate="32"

import sys
import os
import readline
import re
import time

def runOrDie(command):
    print "Running: " + command
    ret = os.system(command)
    if ret:
        print command + " failed"
        sys.exit(1)

def exitIfexists(file):
    if os.path.exists(file):
        print "%s already exists.  Exiting." % (file)
        sys.exit(1)


try:
    (script, output) = sys.argv
except:
    print ""
    print "Usage: cds_to_audiobook <title>"
    print ""
    print " Example: cds_to_mp3audiobook BookTitle"
    print ""
    sys.exit(1)

if not os.path.exists(output):
    os.mkdir(output)

os.chdir(output)

exitIfexists(output + ".mp3")

def askQuestion(question):
    print question
    answer=raw_input()
    print "answer='%s'" % answer
    return answer

count = 1

while True:

    # Use 2 digits, even for numbers less than 10 so sorting order is correct
    tmp_output = "%s-%.2d.raw" % (output, count)

    run_command = True
    if os.path.exists(tmp_output):
        answer = askQuestion("%s exists.  Overwrite or Skip? [os]" % tmp_output)

        if re.search("o", answer, re.IGNORECASE):
            run_command = True
        else:
            run_command = False

    if run_command:
        askQuestion("Insert disc %d and press <ENTER> when ready" % count)

        # Don't start until we know there's a disc in the drive
        poll_count = 0
        ret = 1
        while ret != 0:
            print "Looking for disc..."
            if poll_count > 30:
                print "Error: Could not find audio disc"
                sys.exit(1)
            ret = os.system("cdparanoia -Q 2>/dev/null")
            time.sleep(1)
            poll_count += 1

        # sleep for another 10 seconds to wait for auto insert access to calm down
        time.sleep(10)

        # -r for little endian raw
        runOrDie("cdparanoia -r 1- /dev/stdout | cat > '%s'" % (tmp_output))
        runOrDie("eject")

    count += 1

    if re.search("(n|no)", askQuestion("Continue with disk %d? [yn]" % count), re.IGNORECASE):
        break


# Works!  and the sound quality and size is quite acceptable
#  (note: reports are that mp4b files didn't work over a certain size... just stick with mp3)
runOrDie("(cat *.raw) | lame -r -s %s --bitwidth %s --signed --little-endian --resample %s -h -m s -a --abr %s - '%s.mp3'" % (lame_input_rate, lame_input_bits, lame_output_rate, lame_bitrate, output))

# -q 80 necessary?  Looks like to down sample to 20500 we'd have to run it through a sox pipe
#runOrDie("faac -R 44100 -B 16 -C 2 -X -w -q 80 -b 32 -o 'a_magnificent_catastrophe.m4b' '%s.raw'") % ())

