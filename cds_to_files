#!/usr/bin/env python

# Rip an audiobook consisting of multiple cds to wav files, one per disc

# Then, use the files_to_audiobook script to encode to a single audiobook

# Optionally use files_to_chapter_list to inject chapter information for m4b files

# This needs to be run in it's own temporary directory, otherwise it really clouds things up.

# TODO: collect track info for chapter support?  Not sure if audiobook cds use chapters as tracks,
#  or just have tracks every few minutes.  If so, we should output one file per track instead of per disc

import sys
import os
import readline
import re
import time

def runOrDie(command):
    print "Running: " + command
    ret = os.system(command)
    if ret:
        print command + " failed"
        sys.exit(1)

def askQuestion(question):
    print question
    answer=raw_input()
    print "answer='%s'" % answer
    return answer

def interactivelyRipCds(output):

    if not os.path.exists(output):
        os.mkdir(output)
    os.chdir(output)

    count = 1

    while True:

        # Use 2 digits, even for numbers less than 10 so sorting order is correct
        tmp_output = "%s-%.2d.wav" % (output, count)

        run_command = True
        if os.path.exists(tmp_output):
            answer = askQuestion("%s exists.  Overwrite or Skip? [os]" % tmp_output)

            if re.search("o", answer, re.IGNORECASE):
                run_command = True
            else:
                run_command = False

        if run_command:
            askQuestion("Insert disc %d and press <ENTER> when ready" % count)

            # Don't start until we know there's a disc in the drive
            poll_count = 0
            ret = 1
            while ret != 0:
                print "Looking for disc..."
                if poll_count > 30:
                    print "Error: Could not find audio disc"
                    sys.exit(1)
                ret = os.system("cdparanoia -Q 2>/dev/null")
                time.sleep(1)
                poll_count += 1

            # sleep for another 10 seconds to wait for auto insert access to calm down
            time.sleep(10)

            # Rip the whole disc to a wav file
            runOrDie("cdparanoia --output-wav 1- '%s'" % (tmp_output))
            runOrDie("eject")

        count += 1

        if re.search("(n|no)", askQuestion("Continue with disk %d? [yn]" % count), re.IGNORECASE):
            break


if __name__ == "__main__":

    try:
        (script, output) = sys.argv
    except:
        print ""
        print "Usage: cds_to_files <title>"
        print ""
        print " Example: cds_to_files BookTitle"
        print ""
        sys.exit(1)

    interactivelyRipCds(output)

